=============================
Boolean literal
=============================

{{ true }}
{{ false }}

---

(source_file
  (text)
  (render_statement
    (boolean_literal))
  (text)
  (render_statement
    (boolean_literal))
  (text))

=============================
Simple string literal
=============================

{{ 'cringe' }}
{{ "based" }}
{{ '' }}
{{ "" }}
{{ "    	" }}
{{ '//' }}

---

(source_file
  (text)
  (render_statement
    (string_literal))
  (text)
  (render_statement
    (string_literal))
  (text)
  (render_statement
    (string_literal))
  (text)
  (render_statement
    (string_literal))
  (text)
  (render_statement
    (string_literal))
  (text)
  (render_statement
    (string_literal))
  (text))

=============================
String literal with special chars
=============================

{{ "'" }}
{{ '"' }}
{{ '{' }}
{{ '{{' }}
{{ '}}' }}
{{ '#}' }}
{{ '##}' }}
{{ '{#' }}
{{ '{%' }}
{{ '%}' }}

---

(source_file
  (text)
  (render_statement
    (string_literal))
  (text)
  (render_statement
    (string_literal))
  (text)
  (render_statement
    (string_literal))
  (text)
  (render_statement
    (string_literal))
  (text)
  (render_statement
    (string_literal))
  (text)
  (render_statement
    (string_literal))
  (text)
  (render_statement
    (string_literal))
  (text)
  (render_statement
    (string_literal))
  (text)
  (render_statement
    (string_literal))
  (text)
  (render_statement
    (string_literal))
  (text))

=============================
Escaped string literal
=============================

{{ '\'' }}
{{ '\n' }}
{{ "\r" }}
{{ "\"" }}
{{ "\u03A9" }}
{{ "\U0001F600" }}
{{ "\x7F" }}
{{ "\  t" }}

---

(source_file
  (text)
  (render_statement
    (string_literal
      (escape_sequence)))
  (text)
  (render_statement
    (string_literal
      (escape_sequence)))
  (text)
  (render_statement
    (string_literal
      (escape_sequence)))
  (text)
  (render_statement
    (string_literal
      (escape_sequence)))
  (text)
  (render_statement
    (string_literal
      (escape_sequence)))
  (text)
  (render_statement
    (string_literal
      (escape_sequence)))
  (text)
  (render_statement
    (string_literal
      (escape_sequence)))
  (text)
  (render_statement
    (string_literal
      (escape_sequence)))
  (text))

=============================
Invalid string literal
:error
=============================

{{ ' ' ' }}

---



=============================
Invalid multiline string literal
:error
=============================

{{ "
" }}

---



